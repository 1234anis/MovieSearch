{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","movieInfo","setMovieInfo","title","setTitle","useEffect","getmovieData","url","fetch","then","res","json","movie","console","log","catch","e","className","type","placeholder","onChange","value","target","onClick","undefined","Error","src","Poster","alt","Title","Genre","Director","Plot","Actors","BoxOffice","Language","Released","Runtime","Ratings","map","rating","index","Source","Value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAsFeA,EAlFH,WAEV,MAA+BC,IAAMC,SAAS,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsBH,IAAMC,SAAS,gBAArC,mBAAMG,EAAN,KAAYC,EAAZ,KACAC,qBAAU,WAEVC,MAEE,IAEF,IAKMA,EAAa,WACjB,IAAMC,EAAI,6BAAD,OAA8BJ,EAA9B,oBAETK,MAAMD,GAAKE,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAC3BF,MAAK,SAACG,GACPV,EAAaU,GACbC,QAAQC,IAAIF,MAETG,OAAM,SAACC,GACRH,QAAQC,IAAIE,OAGf,OAAQ,mCACR,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,8CACA,sBAAKA,UAAU,cAAf,UACE,uBAAOC,KAAK,OAAOC,YAAY,mBAAmBC,SAAU,SAACJ,GAvBrD,IAACK,IAuBoEL,EAAEM,OAAOD,MAtB5FjB,EAASiB,IAsB6FJ,UAAU,iBAC3G,wBAAQA,UAAU,MAAMM,QAASjB,EAAjC,+BAGoBkB,KAAV,OAATvB,QAAS,IAATA,OAAA,EAAAA,EAAWwB,OAEb,sBAAKR,UAAU,QAAf,UACE,qBAAKA,UAAU,SAAf,SACC,qBAAKS,IAAG,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAW0B,OAAQC,IAAI,WAAWX,UAAU,WAEvD,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oCAAKhB,QAAL,IAAKA,OAAL,EAAKA,EAAW4B,QAChB,8BAAG,2CAAH,YAA4B5B,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAW6B,SACvC,kCAAI,iDAAJ,YAAmC7B,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAW8B,YAC9C,8BAAG,0CAAH,YAA2B9B,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAW+B,QACtC,kCAAI,4CAAJ,YAA8B/B,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAWgC,UACzC,8BAAG,gDAAH,YAAiChC,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAWiC,aAC5C,8BAAG,8CAAH,YAA+BjC,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWkC,YAC1C,8BAAG,mDAAH,YAAoClC,QAApC,IAAoCA,OAApC,EAAoCA,EAAWmC,YAC/C,8BAAG,6CAAH,YAA8BnC,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAWoC,WACzC,qBAAKpB,UAAU,UAAf,gBAEEhB,QAFF,IAEEA,OAFF,EAEEA,EAAWqC,QAAQC,KAAI,SAACC,EAAOC,GAAR,OAErB,gCACA,iCAASD,EAAOE,SAChB,6BAAKF,EAAOG,uBArBM,YAiCxB,2DCtEZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.98c55226.chunk.js","sourcesContent":["import React,{useEffect} from 'react';\nimport './App.css';\n\n//http://www.omdbapi.com/?t=the%20avengers&apikey=a24fa3d6\nconst App = () => {\n\n  const [movieInfo,setMovieInfo]=React.useState(null);\n  const[title,setTitle]=React.useState(\"the avengers\")\n  useEffect(() => {\n\n  getmovieData();\n\n  },[])\n\n  const readTitle=(value)=>{\n    setTitle(value);\n    // console.log(value);\n\n  }\n  const getmovieData=()=>{\n    const url=`http://www.omdbapi.com/?t=${title}&apikey=a24fa3d6`\n   \n    fetch(url).then((res)=>res.json())\n   .then((movie)=>{\n   setMovieInfo(movie);\n   console.log(movie);\n   \n   }).catch((e)=>{\n     console.log(e);\n   })\n  }\n  return (<>\n  <div className=\"App\"  >\n    <div className=\"container\">\n      <div className=\"padd\">\n        <h1>Movie Search</h1>\n        <div className=\"input-group\">\n          <input type=\"text\" placeholder=\"Enter Movie Name\" onChange={(e)=>{ readTitle(e.target.value)}}  className=\"search-field\"/>\n         <button className=\"btn\" onClick={getmovieData}>Get Movie</button>\n        </div>\n        {\n          movieInfo?.Error===undefined?( \n        \n        <div className=\"movie\" key={\"moviInfo\"}>\n          <div className=\"poster\"  >\n           <img src={movieInfo?.Poster} alt=\"movieImg\" className=\"img1\" />\n          </div>\n          <div className=\"details\">\n            <div className=\"padd\">\n              <h1>{movieInfo?.Title}</h1>\n              <p><strong>Genre</strong> :{movieInfo?.Genre}</p>\n              <p> <strong>Directed By</strong> :{movieInfo?.Director}</p>\n              <p><strong>Plot</strong> :{movieInfo?.Plot}</p>\n              <p> <strong>Actors</strong> :{movieInfo?.Actors}</p>\n              <p><strong>Collection</strong> :{movieInfo?.BoxOffice}</p>\n              <p><strong>language</strong> :{movieInfo?.Language}</p>\n              <p><strong>Released Date</strong> :{movieInfo?.Released}</p>\n              <p><strong>Runtime</strong> :{movieInfo?.Runtime}</p>\n              <div className=\"ratings\">\n              {\n                movieInfo?.Ratings.map((rating,index)=>(\n\n                  <div>\n                  <strong>{rating.Source}</strong>\n                  <h3>{rating.Value}</h3>\n                </div>\n                ))\n              }\n               \n               \n              </div>\n            </div>\n          </div>\n        </div>\n          ):\n          (\n            <h1>Movie not Found</h1>\n          ) \n        }\n     </div>\n    </div>\n  </div>\n  </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}